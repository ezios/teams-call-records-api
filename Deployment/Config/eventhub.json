{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "eventHubNamespaceName": {
        "type": "string",
        "metadata": {
          "description": "Specifies a project name that is used to generate the Event Hub name and the Namespace name."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Specifies the Azure location for all resources."
        }
      },
      "eventHubSku": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [ "Basic", "Standard" ],
        "metadata": {
          "description": "Specifies the messaging tier for Event Hub Namespace."
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.EventHub/namespaces",
        "apiVersion": "2018-01-01-preview",
        "name": "[parameters('eventHubNamespaceName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('eventHubSku')]",
          "tier": "[parameters('eventHubSku')]",
          "capacity": 1
        },
        "properties": {
          "isAutoInflateEnabled": false,
          "maximumThroughputUnits": 0
        }
      },
      {
        "type": "Microsoft.EventHub/namespaces/eventhubs",
        "apiVersion": "2017-04-01",
        "name": "[concat(parameters('eventHubNamespaceName'), '/calls')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.EventHub/namespaces/', parameters('eventHubNamespaceName'))]"
        ],
        "properties": {
          "messageRetentionInDays": 1,
          "partitionCount": 4
        }
      },
      {
        "type": "Microsoft.EventHub/namespaces/eventhubs",
        "apiVersion": "2017-04-01",
        "name": "[concat(parameters('eventHubNamespaceName'), '/participants')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.EventHub/namespaces/', parameters('eventHubNamespaceName'))]"
        ],
        "properties": {
          "messageRetentionInDays": 1,
          "partitionCount": 4
        }
      },
      {
        "type": "Microsoft.EventHub/namespaces/eventhubs",
        "apiVersion": "2017-04-01",
        "name": "[concat(parameters('eventHubNamespaceName'), '/sessions')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.EventHub/namespaces/', parameters('eventHubNamespaceName'))]"
        ],
        "properties": {
          "messageRetentionInDays": 1,
          "partitionCount": 4
        }
      },
      {
        "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
        "apiVersion": "2017-04-01",
        "name": "[concat(parameters('eventHubNamespaceName'), '/calls/sap_calls')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.EventHub/namespaces/eventhubs/', parameters('eventHubNamespaceName'), 'calls')]"
        ],
        "properties": {
            "Rights": [
                "Manage",
                "Listen",
                "Send"
            ]
        }
      },
      {
        "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
        "apiVersion": "2017-04-01",
        "name": "[concat(parameters('eventHubNamespaceName'), '/participants/sap_participants')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.EventHub/namespaces/eventhubs/', parameters('eventHubNamespaceName'), 'participants')]"
        ],
        "properties": {
            "Rights": [
                "Manage",
                "Listen",
                "Send"
            ]
        }
      },
      {
        "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
        "apiVersion": "2017-04-01",
        "name": "[concat(parameters('eventHubNamespaceName'), '/sessions/sap_sessions')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.EventHub/namespaces/eventhubs/', parameters('eventHubNamespaceName'), 'sessions')]"
        ],
        "properties": {
            "Rights": [
                "Manage",
                "Listen",
                "Send"
            ]
        }
      }
    ]
  }